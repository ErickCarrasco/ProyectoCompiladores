/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Erick C
 */
public class GraphVIS extends javax.swing.JFrame {

    final JFileChooser fc = new JFileChooser();
    File fl;
    
    /**
     * Creates new form GraphVIS
     */
    public GraphVIS() {
        initComponents();
        fc.setCurrentDirectory(new File("./src/"));
        fc.setFileFilter(new FileNameExtensionFilter("Text", "txt"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta_codex = new javax.swing.JTextArea();
        jb_loadFile = new javax.swing.JButton();
        jb_printer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ta_codex.setEditable(false);
        ta_codex.setColumns(20);
        ta_codex.setRows(5);
        jScrollPane1.setViewportView(ta_codex);

        jb_loadFile.setText("Load File");
        jb_loadFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_loadFileMouseClicked(evt);
            }
        });

        jb_printer.setText("To AST");
        jb_printer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_printerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jb_loadFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_printer)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_loadFile)
                    .addComponent(jb_printer))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_loadFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_loadFileMouseClicked
        // Get file to text area
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
             fl = fc.getSelectedFile();
        try {
          // What to do with the file, e.g. display it in a TextArea
          this.ta_codex.read( new FileReader( fl.getAbsolutePath() ), null );
        } catch (Exception ex) {
          //System.out.println("problem accessing file"+file.getAbsolutePath());
        }
        } else {
            System.out.println("File access cancelled by user.");
        }   

    }//GEN-LAST:event_jb_loadFileMouseClicked

    private void jb_printerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_printerMouseClicked
        // Funcion para graficar el arbol
        try{
            AnalizadorSintactico p = new AnalizadorSintactico(new Lexico(new FileReader(fl)));
            p.parse();
            if((Lexico.erroresLexicos == 0) && (AnalizadorSintactico.syntacticErrors ==0)){
                Nodo root = AnalizadorSintactico.padre;
                
                Graficar(recorrido(root));
                System.out.println("El AST fue generado correctamente.");
            }else{
                System.out.println("No se gener√≥ el AST.");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
        
       

        
    }//GEN-LAST:event_jb_printerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphVIS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_loadFile;
    private javax.swing.JButton jb_printer;
    private javax.swing.JTextArea ta_codex;
    // End of variables declaration//GEN-END:variables
   private String recorrido(Nodo raiz){
        String cuerpo = "";
            for(Nodo child : raiz.hijos ){
                if(!(child.getEtiqueta().equals("vacio"))){
                    cuerpo += "\"" + raiz.getID() + ". " + raiz.getEtiqueta() + " = " + raiz.getValor() +
        			"\"->\""+ child.getID() +". " + child.getEtiqueta()  + " = " + child.getValor() + "\""  + "\n";
        		    cuerpo += recorrido(child);
                }
            }
            return cuerpo;
        }

        private  void Graficar(String cadena) {
            FileWriter fw = null;
            PrintWriter pw = null;
            String archivo = "AbstractSyntaxTree.dot";
            try {
                fw = new FileWriter(archivo);
                pw = new PrintWriter(fw);
                pw.println("digraph G {");
                pw.println(cadena);
                pw.println("\n}");
                fw.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            
        }
}

